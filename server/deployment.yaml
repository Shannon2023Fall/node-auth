apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-controller
  labels:
    name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongo
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  type: LoadBalancer
  selector:
    name: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: pfdzm-node-auth
  labels:
    name: pfdzm-node-auth
spec:
  selector:
    name: pfdzm-node-auth
  type: LoadBalancer
  ports:
    - port: 10000
      targetPort: 10000
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pfdzm-node-auth-controller
  labels:
    name: pfdzm-node-auth
spec:
  replicas: 2
  selector:
    matchLabels:
      name: pfdzm-node-auth
  template:
    metadata:
      labels:
        name: pfdzm-node-auth
    spec:
      restartPolicy: Always
      containers:
        - name: pfdzm-node-auth
          image: pfdzm-node-auth:arm
          imagePullPolicy: Never
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 10000
          env:
            - name: PORT
              value: "10000"
            - name: HOST
              value: 0.0.0.0
            - name: DATABASE_URL
              value: mongodb://mongo:27017/todo-app
